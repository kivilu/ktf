<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~
  ~   Licensed to the Apache Software Foundation (ASF) under one or more
  ~   contributor license agreements.  See the NOTICE file distributed with
  ~   this work for additional information regarding copyright ownership.
  ~   The ASF licenses this file to You under the Apache License, Version 2.0
  ~   (the "License"); you may not use this file except in compliance with
  ~   the License.  You may obtain a copy of the License at
  ~
  ~       http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~   Unless required by applicable law or agreed to in writing, software
  ~   distributed under the License is distributed on an "AS IS" BASIS,
  ~   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~   See the License for the specific language governing permissions and
  ~   limitations under the License.
  ~
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

   <!-- 提供方应用信息，用于计算依赖关系 -->  
   <!-- <dubbo:application name="${dubbo.application.name}"  /> -->
  
    <!-- 注册中心服务地址 -->  
    <!-- <dubbo:registry protocol="${dubbo.registry.protocol}" address="${dubbo.registry.address}" /> -->
    
    <!-- 服务提供者缺省值配置 -->
    <!-- <dubbo:provider iothreads="5" threadpool="cached" threads="500" /> -->
    
    <!-- 消费者公共配置 -->
    <!-- <dubbo:consumer check="false" /> -->
  
    <!-- 用dubbo协议在30001 -->  
    <!-- <dubbo:protocol name="${dubbo.protocol.name}" port="${dubbo.protocol.port}" 
          dispather="all" serialization="kryo"/>  -->
    
   <!-- <dubbo:protocol name="rest" port="${dubbo.protocol.rest.port}" 
          contextpath="${dubbo.protocol.rest.contextpath}" 
          server="${dubbo.protocol.rest.server}"/> -->
          
          
    <import resource="classpath:dubbo/dubbo-provider-*.xml"/>
    <import resource="classpath*:dubbo/dubbo-consumer-*.xml"/>


</beans>